{
	"name": "Node.js Container",
	"build": {
		"dockerfile": "Dockerfile",
		// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
		// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/debian
		// Update 'VARIANT' to pick an Debian version: bullseye, buster, stretch
		// Use bullseye or stretch on local arm64/Apple Silicon.
		// "args": { "VARIANT": "bullseye" }


		// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
		// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/javascript-node
		// Update 'VARIANT' to pick a Node version: 16, 14, 12.
		// Append -bullseye or -buster to pin to an OS version.
		// Use -bullseye variants on local arm64/Apple Silicon.
		// "args": { "VARIANT": "16-bullseye" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"eamodio.gitlens"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Volumes used for file storage
	"workspaceMount": "source=nodejs-container,target=/workspaces/nodejs-container,type=volume",
	"workspaceFolder": "/workspaces/nodejs-container",

	// Save vscode extensions through container rebuilds
	"mounts": [
		"source=vscode-extensions-nodejs-container,target=/home/node/.vscode-server/extensions,type=volume",
		"source=vscode-insiders-extensions-nodejs-container,target=/home/node/.vscode-server-insiders/extensions,type=volume" // VS Code Insiders
	],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode",
	"remoteUser": "node",

	"features": {
		"git": "latest"
	},

	// Dockerfile and image
	// "containerUser": "vscode",
	"containerUser": "node",

	// Leave container running after disconnection or closing VS Code
	"shutdownAction": "none"
}
